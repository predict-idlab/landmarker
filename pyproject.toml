[project]
name = "landmarker"
dynamic = ["version"]
description = "A PyTorch-based toolkit for (anatomical) landmark detection in images."
authors = [
    {name = "Jef Jonkers", email = "jef.jonkers@ugent.be"},
]
dependencies = [
    "opencv-python-headless>=4.8.1.78",
    "monai>=1.3.0",
    "torch>=2.0.0",
    "torchvision>=0.15.0",
    "tqdm>=4.66.1",
    "numpy>=1.24.4",
    "pandas>=2.0.3",
    "opendatasets>=0.1.22",
    "rarfile>=4.1",
    "scipy>=1.9.3",
    "kornia>=0.7.0",
    "pydicom>=2.4.3",
    "matplotlib>=3.7.4",
    "seaborn>=0.13.0",
]
requires-python = ">=3.10,<3.12"
readme = "README.md"
license = {text = "MIT"}

[tool.pdm.version]
source = "file"
path = "src/landmarker/__init__.py"

[tool.pdm.scripts]
test = "pytest"
tox = "tox"
type = "mypy src/landmarker"
lint = "flake8 src/landmarker"
doc = "sphinx-build docs docs/_build/html"
docauto = "sphinx-autobuild docs docs/_build/html --ignore _collections"

[build-system]
requires = ["pdm-backend"]
build-backend = "pdm.backend"

[tool.pdm.build]
excludes = ["./**/.git"]
package-dir = "src"
includes = ["src/landmarker"]
source-includes = ["tests", "CHANGELOG.md", "LICENSE", "README.md", "tox.ini"]
editable-backend = "path"

[tool.pdm.dev-dependencies]
test = [
    "pytest",
    "pdm[pytest]",
    "pytest-cov",
]
lint = [
    "flake8",
    "black",
]
doc = [
    "sphinx>=7.1.2",
    "sphinx-autobuild",
    "sphinxext-opengraph",
    "sphinx-copybutton",
    "myst-parser",
    "sphinx_design",
    "furo",
    "myst-nb",
    "sphinx-togglebutton",
    "sphinx-collections",
    "GitPython"
]
type = [
    "mypy>=1.7.1",
]
tox = [
    "tox",
]

[tool.pytest.ini_options]
filterwarnings = [
  "ignore::DeprecationWarning",
  "ignore::UserWarning"
]
testpaths = [
    "tests/",
]
addopts = ["--cov=src/landmarker", "--cov-report=term-missing", "--cov-report=xml"]

[tool.coverage.run]
omit = ["*/datasets/*"]

[tool.mypy]
exclude = "tests/"


[tool.black]
line-length = 100
include = "src/landmarker"

[tool.isort]
profile = "black"
atomic = true
filter_files = true
